[tox]
envlist = build, style, doc, test


[testenv]
changedir = {envtmpdir}
passenv = HOME, WORKSPACE, https_proxy, http_proxy, no_proxy


[testenv:run]
deps =
    ipdb
setenv =
    SURREALDB_PASSWORD=root
commands =
    surrealdb_migrations -vvv {posargs}


[testenv:run-db]
allowlist_externals =
    docker
commands =
    docker run \
        --rm \
        --pull always \
        --name surrealdb \
        -p 8000:8000 \
        surrealdb/surrealdb:latest \
        start --log trace --user root --pass root memory


[testenv:build]
skip_install = True
deps =
    build
    wheel
commands =
    {envpython} -m build {toxinidir}


[testenv:build-container]
skip_install = True
allowlist_externals =
    docker
commands =
    docker build --file {toxinidir}/deployment/docker/Dockerfile {toxinidir} {posargs:--tag surrealdb_migrations:latest}


[testenv:style]
skip_install = True
deps =
    flake8
    pep8-naming
commands =
    flake8 {toxinidir}


[testenv:doc]
deps =
    -rdoc/requirements.txt
allowlist_externals =
    dot
commands =
    sphinx-build -W -b html -d doctrees {toxinidir}/doc/ html
    {envpython} -c "print('>> You may now run:\nwebdev {envtmpdir}/html/')"


[testenv:test]
deps =
    -rtest/requirements.txt
allowlist_externals =
    rm
commands =
    # Clean testing cache
    rm -rf {toxinidir}/test/__pycache__

    # Run test suite
    py.test -s \
        --junitxml=tests.xml \
        --cov=surrealdb_migrations \
        --cov-report xml \
        --cov-report html \
        --cov-report term \
        {posargs} \
        {toxinidir}/test


[testenv:publish]
skip_install = True
deps =
    build
    wheel
    twine
allowlist_externals =
    ls
commands =
    {envpython} -m build {toxinidir}
    ls -lh {toxinidir}/dist/
    {envpython} -c "print((\
        'Packages ready. '\
        'Execute the following command to publish:\n'\
        '    twine upload --repository pypi --skip-existing dist/*'\
    ))"


[flake8]
exclude = .git,.tox,.cache,__pycache__,build,*.egg-info,.local
